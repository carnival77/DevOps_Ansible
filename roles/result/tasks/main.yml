---
- import_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Define nodejs_install_npm_user
  set_fact:
    nodejs_install_npm_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
  when: nodejs_install_npm_user is not defined

- name: Create npm global directory
  file:
    path: "{{ npm_config_prefix }}"
    owner: "root"
    group: "root"
    state: directory

#- name: Add npm_config_prefix bin directory to global $PATH.
#  template:
#    src: /etc/ansible/roles/deploy/templates/boot.j2
#    dest: /etc/ansible/BootStrap/T-DOP-600_bootstrap_ansible_applications/
#    mode: 0777

- name: Ensure npm global packages are installed.
  npm:
    name: "{{ item.name | default(item) }}"
    version: "{{ item.version | default('latest') }}"
    global: true
    state: latest

  environment:
    NPM_CONFIG_PREFIX: "{{ npm_config_prefix }}"
    NODE_PATH: "{{ npm_config_prefix }}/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "{{ npm_config_unsafe_perm }}"
  with_items: "{{ nodejs_npm_global_packages }}"
  tags: ['skip_ansible_lint']

- name: Install packages defined in a given package.json.
  npm:
    path: "{{ nodejs_package_json_path }}"
  when: nodejs_package_json_path is defined and nodejs_package_json_path

  - name: upload result service (from the postgresql to the result server)


#  - name: install dependency
  - name: get data from postgresql
    postgresql_db:
      name:
      login_host: root
      # Needs to check whether it is right
      login_user: {{POSTGRESQL_user}}
      login_password: {{POSTGRESQL_password}}
      port: 5432
      state: dump
      target: 
      # I need to know where the data base is


  - name: run the program (by service file)
    systemd:
      state: started
      name: poll.service
#  - name: Install packages based on package.json.
#  npm:
#    path: /app/location
#
#- name: Update packages based on package.json to their latest version.
#  npm:
#    path: /app/location
#    state: latest